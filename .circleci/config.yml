version: 2.1

jobs:
    build:
        docker:
            - image: python:3.7.3-stretch

        working_directory: ~/repo

        steps:
            - checkout
    
            - restore_cache:
                keys:
                    - v1-dependencies-{{ checksum "requirements.txt" }}
                    - v1-dependencies-
            
            - run:
                name: install dependencies
                command: |
                    python3 -m venv venv
                    . venv/bin/activate
                    make install
                    # Install hadolint
                    wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
                    chmod +x /bin/hadolint
            - save_cache:
                paths:
                    - ./venv
                key: v1-dependencies-{{ checksum "requirements.txt" }}
            
            # run lint!
            - run:
                name: run lint
                command: |
                    . venv/bin/activate
                    make lint 
    deploy-ec2:
        docker:
          - image: amazon/aws-cli
        steps:
          - checkout
          - run:
              name: Install Dependancies 
              command: |
                yum install gzip -y 
                yum install tar -y       
          - run:
              name: Deploy K8s EC2
              command: |
                aws cloudformation deploy \
                  --template-file .circleci/files/ec2.yml \
                  --tags project=udacity-capstone \
                  --stack-name "udacity-capstone-${CIRCLE_WORKFLOW_ID:0:7}" \
                  --parameter-overrides ID=${CIRCLE_WORKFLOW_ID:0:7}  
          - run:
              name: Add instance ip to ansible inventory
              command: |
                echo "[web]" > inventory.txt
                IP=$(aws ec2 describe-instances --region eu-central-1 --query "Reservations[*].Instances[*].PublicIpAddress"  --filters "Name=tag:Name,Values=backend-${CIRCLE_WORKFLOW_ID:0:7}"  --output text) 
                echo $IP >> .circleci/ansible/inventory.txt
                cat .circleci/ansible/inventory.txt
                curl -H "Content-Type: text/plain" -H "token: ${CIRCLE_WORKFLOW_ID:0:7}" --request PUT --data "${IP}" https://api.memstash.io/values/ec2-ip-${CIRCLE_WORKFLOW_ID:0:7}                   
          - persist_to_workspace:
              root: ~/project/.circleci/ansible/
              paths:
                - inventory.txt
                
workflows:
  default:
    jobs:
      - build
      - delpoy-ec2:
          requires: [build]